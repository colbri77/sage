cd build && \
	"../build/pipestatus" \
		"env SAGE_PARALLEL_SPKG_BUILD='' ./install all 2>&1" \
		"tee -a ../logs/install.log"
Nothing to (re)build / all up-to-date.
./sage -b
[?1034hscons: `install' is up to date.
Updating Cython code....
Compiling sage/borderbasis/cppWrapper.pyx because it changed.
Cythonizing sage/borderbasis/cppWrapper.pyx

Error compiling Cython file:
------------------------------------------------------------
...
from c_src import *
from sage.rings.polynomial.multi_polynomial_sequence import PolynomialSequence

cdef class PyIOwningList_pol:
    cdef IOwningList[IPolynomial_uint64*]* thisptr
        ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:5:9: 'IOwningList' is not a type identifier

Error compiling Cython file:
------------------------------------------------------------
...
        pass
    def __cinit__(self):
        pass

cdef class PyIPolynomial_uint64:
    cdef IPolynomial[long long unsigned int]* thisptr
        ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:12:9: 'IPolynomial' is not a type identifier

Error compiling Cython file:
------------------------------------------------------------
...
        pass
    def __cinit__(self):
        pass

cdef class PyMonomialFactory_uint64:
    cdef MonomialFactory[long long unsigned int]* thisptr
        ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:19:9: 'MonomialFactory' is not a type identifier

Error compiling Cython file:
------------------------------------------------------------
...
        pass
    def __cinit__(self):
        pass

cdef class PyMonomialFactory_uint64:
    cdef MonomialFactory[long long unsigned int]* thisptr
                                               ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:19:48: C attributes cannot be added in implementation part of extension type defined in a pxd

Error compiling Cython file:
------------------------------------------------------------
...
        self.thisptr = new MonomialFactory[long long unsigned int](MONOMIALTYPE_DEGLEX)
    def __dealloc__(self):
        del self.thisptr

cdef class PyPolynomialFactory_uint64:
    cdef PolynomialFactory[long long unsigned int]* thisptr
        ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:28:9: 'PolynomialFactory' is not a type identifier

Error compiling Cython file:
------------------------------------------------------------
...
        self.thisptr = new MonomialFactory[long long unsigned int](MONOMIALTYPE_DEGLEX)
    def __dealloc__(self):
        del self.thisptr

cdef class PyPolynomialFactory_uint64:
    cdef PolynomialFactory[long long unsigned int]* thisptr
                                                 ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:28:50: C attributes cannot be added in implementation part of extension type defined in a pxd

Error compiling Cython file:
------------------------------------------------------------
...
cdef class PyMatrixFactory_uint64:
    def __init__(self):
        pass
    def __cinit__(self):
        pass
    cdef IMatrixFactory[long long unsigned int]* thisptr
        ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:41:9: 'IMatrixFactory' is not a type identifier

Error compiling Cython file:
------------------------------------------------------------
...
cdef class PyMatrixFactory_uint64:
    def __init__(self):
        pass
    def __cinit__(self):
        pass
    cdef IMatrixFactory[long long unsigned int]* thisptr
                                              ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:41:47: C attributes cannot be added in implementation part of extension type defined in a pxd

Error compiling Cython file:
------------------------------------------------------------
...
        pass
    def __cinit__(self):
        pass
    cdef IMatrixFactory[long long unsigned int]* thisptr

cdef class PyMatrixFactory_Fn_uint64(PyMatrixFactory_uint64):
    ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:43:5: Base type does not match previous declaration

Error compiling Cython file:
------------------------------------------------------------
...
        self.thisptr = <IMatrixFactory[long long unsigned int]*>(new MatrixFactory_Fn(minPolynomial))
    def __dealloc__(self):
        del self.thisptr

cdef class PyBorderBasisTools_uint64:
    cdef BorderBasisTools[long long unsigned int]* thisptr    
        ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:52:9: 'BorderBasisTools' is not a type identifier

Error compiling Cython file:
------------------------------------------------------------
...
        self.thisptr = <IMatrixFactory[long long unsigned int]*>(new MatrixFactory_Fn(minPolynomial))
    def __dealloc__(self):
        del self.thisptr

cdef class PyBorderBasisTools_uint64:
    cdef BorderBasisTools[long long unsigned int]* thisptr    
                                                ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:52:49: C attributes cannot be added in implementation part of extension type defined in a pxd

Error compiling Cython file:
------------------------------------------------------------
...
        del nativeOut
        del nativeOrderIdeal

        return (polynomials, orderIdeal)
 
    cdef PyIOwningList_pol _toNativePolList(self,pythonList):
        ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:105:9: C method '_toNativePolList' not previously declared in definition part of extension type

Error compiling Cython file:
------------------------------------------------------------
...

    def __dealloc__(self):
        del self.thisptr

    cdef getStatistics(self):
        cdef Statistics* stats = new Statistics()
            ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:79:13: 'Statistics' is not a type identifier

Error compiling Cython file:
------------------------------------------------------------
...
        self.thisptr.getStatistics(stats)
        return {'maxMatrix': {'rows': stats.maxMatrix.rows, 'columns': stats.maxMatrix.columns}}

    cdef calculateBasis(self,generators):
        nativeInWrapper = self._toNativeList(generators)
        cdef IOwningList[IPolynomial_uint64*]* nativeIn = (<PyIOwningList_pol>(nativeInWrapper)).thisptr
            ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:85:13: 'IOwningList' is not a type identifier

Error compiling Cython file:
------------------------------------------------------------
...
        return {'maxMatrix': {'rows': stats.maxMatrix.rows, 'columns': stats.maxMatrix.columns}}

    cdef calculateBasis(self,generators):
        nativeInWrapper = self._toNativeList(generators)
        cdef IOwningList[IPolynomial_uint64*]* nativeIn = (<PyIOwningList_pol>(nativeInWrapper)).thisptr
        cdef IOwningList[IPolynomial_uint64*]* nativeOut = <IOwningList[IPolynomial_uint64*]*>(new OwningVector[IPolynomial_uint64*]())
            ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:86:13: 'IOwningList' is not a type identifier

Error compiling Cython file:
------------------------------------------------------------
...

    cdef calculateBasis(self,generators):
        nativeInWrapper = self._toNativeList(generators)
        cdef IOwningList[IPolynomial_uint64*]* nativeIn = (<PyIOwningList_pol>(nativeInWrapper)).thisptr
        cdef IOwningList[IPolynomial_uint64*]* nativeOut = <IOwningList[IPolynomial_uint64*]*>(new OwningVector[IPolynomial_uint64*]())
        cdef IPolynomial[long long unsigned int]* nativeOrderIdeal = (<PyPolynomialFactory_uint64>(self.polFactory)).thisptr.create(self.indet)
            ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:87:13: 'IPolynomial' is not a type identifier

Error compiling Cython file:
------------------------------------------------------------
...
cdef class PyMonomialFactory_uint64:
    cdef MonomialFactory[long long unsigned int]* thisptr
    def __init__(self):
        pass
    def __cinit__(self):
        self.thisptr = new MonomialFactory[long long unsigned int](MONOMIALTYPE_DEGLEX)
                          ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:23:27: 'MonomialFactory' is not a type identifier

Error compiling Cython file:
------------------------------------------------------------
...
cdef class PyMonomialFactory_uint64:
    cdef MonomialFactory[long long unsigned int]* thisptr
    def __init__(self):
        pass
    def __cinit__(self):
        self.thisptr = new MonomialFactory[long long unsigned int](MONOMIALTYPE_DEGLEX)
                          ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:23:27: new operator can only be applied to a C++ class

Error compiling Cython file:
------------------------------------------------------------
...
    def __init__(self):
        pass
    def __cinit__(self):
        self.thisptr = new MonomialFactory[long long unsigned int](MONOMIALTYPE_DEGLEX)
    def __dealloc__(self):
        del self.thisptr
               ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:25:16: Deletion of non-Python, non-C++ object

Error compiling Cython file:
------------------------------------------------------------
...
cdef class PyPolynomialFactory_uint64:
    cdef PolynomialFactory[long long unsigned int]* thisptr
    def __init__(self):
        pass
    def __cinit__(self):
        self.thisptr = new PolynomialFactory[long long unsigned int](POLTYPE_VECTOR)
                          ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:32:27: 'PolynomialFactory' is not a type identifier

Error compiling Cython file:
------------------------------------------------------------
...
cdef class PyPolynomialFactory_uint64:
    cdef PolynomialFactory[long long unsigned int]* thisptr
    def __init__(self):
        pass
    def __cinit__(self):
        self.thisptr = new PolynomialFactory[long long unsigned int](POLTYPE_VECTOR)
                          ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:32:27: new operator can only be applied to a C++ class

Error compiling Cython file:
------------------------------------------------------------
...
    def __init__(self):
        pass
    def __cinit__(self):
        self.thisptr = new PolynomialFactory[long long unsigned int](POLTYPE_VECTOR)
    def __dealloc__(self):
        del self.thisptr
               ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:34:16: Deletion of non-Python, non-C++ object

Error compiling Cython file:
------------------------------------------------------------
...

cdef class PyMatrixFactory_Fn_uint64(PyMatrixFactory_uint64):
    def __init__(self):
        pass
    def __cinit__(self,minPolynomial):
        self.thisptr = <IMatrixFactory[long long unsigned int]*>(new MatrixFactory_Fn(minPolynomial))
                       ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:47:24: 'IMatrixFactory' is not a type identifier

Error compiling Cython file:
------------------------------------------------------------
...

cdef class PyMatrixFactory_Fn_uint64(PyMatrixFactory_uint64):
    def __init__(self):
        pass
    def __cinit__(self,minPolynomial):
        self.thisptr = <IMatrixFactory[long long unsigned int]*>(new MatrixFactory_Fn(minPolynomial))
                                                                    ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:47:69: 'MatrixFactory_Fn' is not a type identifier

Error compiling Cython file:
------------------------------------------------------------
...

cdef class PyMatrixFactory_Fn_uint64(PyMatrixFactory_uint64):
    def __init__(self):
        pass
    def __cinit__(self,minPolynomial):
        self.thisptr = <IMatrixFactory[long long unsigned int]*>(new MatrixFactory_Fn(minPolynomial))
                                                                    ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:47:69: new operator can only be applied to a C++ class

Error compiling Cython file:
------------------------------------------------------------
...
        elif(optimizations == "experimental"):
            self.optimizations = EXPERIMENTAL
        else:
            raise ValueError("optimization value \""+optimizations+"\" unknown")

        self.thisptr = new BorderBasisTools[long long unsigned int](matrixFactory.thisptr,polFactory.thisptr,monFactory.thisptr,indeterminates,self.optimizations)
                          ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:73:27: 'BorderBasisTools' is not a type identifier

Error compiling Cython file:
------------------------------------------------------------
...
        elif(optimizations == "experimental"):
            self.optimizations = EXPERIMENTAL
        else:
            raise ValueError("optimization value \""+optimizations+"\" unknown")

        self.thisptr = new BorderBasisTools[long long unsigned int](matrixFactory.thisptr,polFactory.thisptr,monFactory.thisptr,indeterminates,self.optimizations)
                          ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:73:27: new operator can only be applied to a C++ class

Error compiling Cython file:
------------------------------------------------------------
...
            raise ValueError("optimization value \""+optimizations+"\" unknown")

        self.thisptr = new BorderBasisTools[long long unsigned int](matrixFactory.thisptr,polFactory.thisptr,monFactory.thisptr,indeterminates,self.optimizations)

    def __dealloc__(self):
        del self.thisptr
               ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:76:16: Deletion of non-Python, non-C++ object

Error compiling Cython file:
------------------------------------------------------------
...

    def __dealloc__(self):
        del self.thisptr

    cdef getStatistics(self):
        cdef Statistics* stats = new Statistics()
                                    ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:79:37: 'Statistics' is not a type identifier

Error compiling Cython file:
------------------------------------------------------------
...

    def __dealloc__(self):
        del self.thisptr

    cdef getStatistics(self):
        cdef Statistics* stats = new Statistics()
                                    ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:79:37: new operator can only be applied to a C++ class

Error compiling Cython file:
------------------------------------------------------------
...
        return {'maxMatrix': {'rows': stats.maxMatrix.rows, 'columns': stats.maxMatrix.columns}}

    cdef calculateBasis(self,generators):
        nativeInWrapper = self._toNativeList(generators)
        cdef IOwningList[IPolynomial_uint64*]* nativeIn = (<PyIOwningList_pol>(nativeInWrapper)).thisptr
        cdef IOwningList[IPolynomial_uint64*]* nativeOut = <IOwningList[IPolynomial_uint64*]*>(new OwningVector[IPolynomial_uint64*]())
                                                           ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:86:60: 'IOwningList' is not a type identifier

Error compiling Cython file:
------------------------------------------------------------
...
        return {'maxMatrix': {'rows': stats.maxMatrix.rows, 'columns': stats.maxMatrix.columns}}

    cdef calculateBasis(self,generators):
        nativeInWrapper = self._toNativeList(generators)
        cdef IOwningList[IPolynomial_uint64*]* nativeIn = (<PyIOwningList_pol>(nativeInWrapper)).thisptr
        cdef IOwningList[IPolynomial_uint64*]* nativeOut = <IOwningList[IPolynomial_uint64*]*>(new OwningVector[IPolynomial_uint64*]())
                                                                                                  ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:86:99: 'OwningVector' is not a type identifier

Error compiling Cython file:
------------------------------------------------------------
...
        return {'maxMatrix': {'rows': stats.maxMatrix.rows, 'columns': stats.maxMatrix.columns}}

    cdef calculateBasis(self,generators):
        nativeInWrapper = self._toNativeList(generators)
        cdef IOwningList[IPolynomial_uint64*]* nativeIn = (<PyIOwningList_pol>(nativeInWrapper)).thisptr
        cdef IOwningList[IPolynomial_uint64*]* nativeOut = <IOwningList[IPolynomial_uint64*]*>(new OwningVector[IPolynomial_uint64*]())
                                                                                                  ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:86:99: new operator can only be applied to a C++ class

Error compiling Cython file:
------------------------------------------------------------
...
        nativeInWrapper = self._toNativeList(generators)
        cdef IOwningList[IPolynomial_uint64*]* nativeIn = (<PyIOwningList_pol>(nativeInWrapper)).thisptr
        cdef IOwningList[IPolynomial_uint64*]* nativeOut = <IOwningList[IPolynomial_uint64*]*>(new OwningVector[IPolynomial_uint64*]())
        cdef IPolynomial[long long unsigned int]* nativeOrderIdeal = (<PyPolynomialFactory_uint64>(self.polFactory)).thisptr.create(self.indet)

        self.thisptr.calculateBasis(<void*>(nativeIn),<void*>(nativeOut),<void*>(nativeOrderIdeal))  
                                   ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:89:36: Cannot convert 'void *' to Python object

Error compiling Cython file:
------------------------------------------------------------
...
        nativeInWrapper = self._toNativeList(generators)
        cdef IOwningList[IPolynomial_uint64*]* nativeIn = (<PyIOwningList_pol>(nativeInWrapper)).thisptr
        cdef IOwningList[IPolynomial_uint64*]* nativeOut = <IOwningList[IPolynomial_uint64*]*>(new OwningVector[IPolynomial_uint64*]())
        cdef IPolynomial[long long unsigned int]* nativeOrderIdeal = (<PyPolynomialFactory_uint64>(self.polFactory)).thisptr.create(self.indet)

        self.thisptr.calculateBasis(<void*>(nativeIn),<void*>(nativeOut),<void*>(nativeOrderIdeal))  
                                                     ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:89:54: Cannot convert 'void *' to Python object

Error compiling Cython file:
------------------------------------------------------------
...
        nativeInWrapper = self._toNativeList(generators)
        cdef IOwningList[IPolynomial_uint64*]* nativeIn = (<PyIOwningList_pol>(nativeInWrapper)).thisptr
        cdef IOwningList[IPolynomial_uint64*]* nativeOut = <IOwningList[IPolynomial_uint64*]*>(new OwningVector[IPolynomial_uint64*]())
        cdef IPolynomial[long long unsigned int]* nativeOrderIdeal = (<PyPolynomialFactory_uint64>(self.polFactory)).thisptr.create(self.indet)

        self.thisptr.calculateBasis(<void*>(nativeIn),<void*>(nativeOut),<void*>(nativeOrderIdeal))  
                                                                        ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:89:73: Cannot convert 'void *' to Python object

Error compiling Cython file:
------------------------------------------------------------
...
        nativeOrderIdealWrapper.thisptr = nativeOrderIdeal

        polynomials = self._fromNativePolList(nativeOutWrapper,generators.ring())
        orderIdeal = self._fromNativePol(nativeOrderIdealWrapper,generators.ring())

        del nativeIn
                   ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:99:20: Deletion of non-Python, non-C++ object

Error compiling Cython file:
------------------------------------------------------------
...

        polynomials = self._fromNativePolList(nativeOutWrapper,generators.ring())
        orderIdeal = self._fromNativePol(nativeOrderIdealWrapper,generators.ring())

        del nativeIn
        del nativeOut
                    ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:100:21: Deletion of non-Python, non-C++ object

Error compiling Cython file:
------------------------------------------------------------
...
        polynomials = self._fromNativePolList(nativeOutWrapper,generators.ring())
        orderIdeal = self._fromNativePol(nativeOrderIdealWrapper,generators.ring())

        del nativeIn
        del nativeOut
        del nativeOrderIdeal
                           ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:101:28: Deletion of non-Python, non-C++ object

Error compiling Cython file:
------------------------------------------------------------
...
        del nativeOrderIdeal

        return (polynomials, orderIdeal)
 
    cdef PyIOwningList_pol _toNativePolList(self,pythonList):
        result = <IOwningList[IPolynomial_uint64*]*>(new OwningVector[IPolynomial_uint64*]())
                 ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:106:18: 'IOwningList' is not a type identifier

Error compiling Cython file:
------------------------------------------------------------
...
                monomial = (<PyMonomialFactory_uint64>(self.monFactory)).thisptr.create(self.indet)
                coef = values[exponents]
                for expPos in range(0,self.indet):
                    exp = exponents[expPos]
                    monomial.set(expPos,exp)
                term = new Term[long long unsigned int](coef,monomial)
                          ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:116:27: 'Term' is not a type identifier

Error compiling Cython file:
------------------------------------------------------------
...
                monomial = (<PyMonomialFactory_uint64>(self.monFactory)).thisptr.create(self.indet)
                coef = values[exponents]
                for expPos in range(0,self.indet):
                    exp = exponents[expPos]
                    monomial.set(expPos,exp)
                term = new Term[long long unsigned int](coef,monomial)
                          ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:116:27: new operator can only be applied to a C++ class

Error compiling Cython file:
------------------------------------------------------------
...
                monomial = (<PyMonomialFactory_uint64>(self.monFactory)).thisptr.create(self.indet)
                coef = values[exponents]
                for expPos in range(0,self.indet):
                    exp = exponents[expPos]
                    monomial.set(expPos,exp)
                term = new Term[long long unsigned int](coef,monomial)
                                                      ^
------------------------------------------------------------

sage/borderbasis/cppWrapper.pyx:116:55: Compiler crash in AnalyseExpressionsTransform

ModuleNode.body = StatListNode(cppWrapper.pyx:1:0)
StatListNode.stats[8] = CClassDefNode(cppWrapper.pyx:51:5,
    as_name = u'PyBorderBasisTools_uint64',
    class_name = u'PyBorderBasisTools_uint64',
    module_name = u'',
    visibility = u'private')
CClassDefNode.body = StatListNode(cppWrapper.pyx:52:4)
StatListNode.stats[5] = CFuncDefNode(cppWrapper.pyx:105:9,
    args = [...]/2,
    modifiers = [...]/0,
    visibility = u'private')
File 'ExprNodes.py', line 4241, in infer_type: SimpleCallNode(cppWrapper.pyx:116:55,
    result_is_used = True,
    use_managed_ref = True)

Compiler crash traceback from this point on:
  File "/home/meister/sage/local/lib/python2.7/site-packages/Cython/Compiler/ExprNodes.py", line 4241, in infer_type
    return PyrexTypes.CPtrType(function.class_type)
AttributeError: 'NewExprNode' object has no attribute 'class_type'
Traceback (most recent call last):
  File "/home/meister/sage/local/lib/python2.7/site-packages/Cython/Build/Dependencies.py", line 919, in cythonize_one_helper
    return cythonize_one(*m[1:])
  File "/home/meister/sage/local/lib/python2.7/site-packages/Cython/Build/Dependencies.py", line 902, in cythonize_one
    raise CompileError(None, pyx_file)
CompileError: sage/borderbasis/cppWrapper.pyx
Traceback (most recent call last):
  File "setup.py", line 538, in <module>
    force=force)
  File "/home/meister/sage/local/lib/python2.7/site-packages/Cython/Build/Dependencies.py", line 782, in cythonize
    pool.map(cythonize_one_helper, to_compile)
  File "/home/meister/sage/local/lib/python/multiprocessing/pool.py", line 250, in map
    return self.map_async(func, iterable, chunksize).get()
  File "/home/meister/sage/local/lib/python/multiprocessing/pool.py", line 554, in get
    raise self._value
Cython.Compiler.Errors.CompileError: sage/borderbasis/cppWrapper.pyx
make: *** [build] Error 1
